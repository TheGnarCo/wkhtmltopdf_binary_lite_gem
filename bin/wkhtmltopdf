#!/usr/bin/env ruby

###
# wkhtmltopdf_binary_gem Copyright 2013 The University of Iowa
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0

#Local M2 OSX
#RbConfig::CONFIG['host_os'] == 'darwin22'
#RbConfig::CONFIG['host_cpu'] == 'arm64'

#Local Compose on M2
#RbConfig::CONFIG['host_os'] == 'linux'
#RbConfig::CONFIG['host_cpu'] == 'aarch64'
#os == 'debian_11'

#AWS eec-web-dev
#RbConfig::CONFIG['host_os'] == 'linux'
#RbConfig::CONFIG['host_cpu'] == 'x86_64'
#os == 'debian_11'

require 'rbconfig'
require 'zlib'

def architecture
  case RbConfig::CONFIG['host_cpu']
  when *%w[arm64 aarch64 arch64]
    'arm64'
  when 'x86_64'
    'amd64'
  else
    'i386'
  end
end

suffix = case RbConfig::CONFIG['host_os']
         when /linux/
           os = `. /etc/os-release 2> /dev/null && echo ${ID}_${VERSION_ID}`.strip

           os = 'ubuntu_20.04' if os.start_with?('ubuntu_20.') ||
                                  os.start_with?('ubuntu_21.') ||
                                  os.start_with?('linuxmint_20.')

           os = 'ubuntu_22.04' if os.start_with?('ubuntu_22.') ||
                                  os.start_with?('linuxmint_21.')

           os_based_on_debian_9 = os.start_with?('debian_9') ||
                                  os.start_with?('deepin')
           os = 'debian_11' if !os_based_on_debian_9 && os.start_with?('debian_11')

           os = 'debian_12' if !os_based_on_debian_9 && os.start_with?('debian_12')

           "#{os}_#{architecture}"
         when /darwin/
           'macos_cocoa'
         else
           'unknown'
         end

suffix = ENV['WKHTMLTOPDF_HOST_SUFFIX'] unless ENV['WKHTMLTOPDF_HOST_SUFFIX'].to_s.empty?

binary = "#{__FILE__}_#{suffix}"

if File.exist?("#{binary}.gz") && !File.exist?(binary)
  File.open binary, 'wb', 0o755 do |file|
    Zlib::GzipReader.open("#{binary}.gz") { |gzip| file << gzip.read }
  end
end

unless File.exist? binary
  raise 'Invalid platform, must be running on Ubuntu 16.04/18.04/20.04/22.04, ' \
        'CentOS 6/7/8, Debian 9/10/11/12, Archlinux amd64, Debian 9/10/11/12 arm64, or Intel-based Cocoa macOS ' \
        "(missing binary: #{binary})."
end

exec *$*.unshift(binary)
